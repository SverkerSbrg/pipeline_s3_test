"""
Django settings for pipeline_s3_test project.

Generated by 'django-admin startproject' using Django 1.10.6.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
from os.path import dirname

BASE_DIR = dirname(dirname(os.path.abspath(__file__)))
print(BASE_DIR)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '3+s3v(ul^)hk+z^!f^&0d&c@hd8!e79j9q3c18n8mui7n73f#1'

# SECURITY WARNING: don't run with debug turned on in production!

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    # 'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    # 'django.contrib.messages',
    'django.contrib.staticfiles',
    'pipeline'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'pipeline_s3_test.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'TEMPLATES').replace('\\', '/'),],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'pipeline_s3_test.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/


from .secrets import _AWS_ACCESS_KEY_ID, _AWS_SECRET_ACCESS_KEY
FRANKFURT_BUCKET = "pipeline-test-frankfurt"
IRELAND_BUCKET = "pipeline-test-ireland"

DEBUG = False
enable_pipeline = True

# STORAGES SETTINGS

ALLOWED_HOSTS = "[*]"


# PIPELINE SETTINGS
PIPELINE = {
    # "COMPILERS": ("libsasscompiler.LibSassCompiler",),
    "PIPELINE_ENABLED": enable_pipeline,
    "YUGLIFY_BINARY": "C:/Users/Sverker/AppData/Roaming/npm/yuglify.cmd",
    "CSS_COMPRESSOR": "pipeline.compressors.yuglify.YuglifyCompressor",
    "JS_COMPRESSOR": "pipeline.compressors.yuglify.YuglifyCompressor",
    "JAVASCRIPT": {
        "js_test": {
            "source_filenames": (
                "javascript/script1.js",
                "javascript/script2.js"
            ),
            "output_filename": "compiled/js.js"
        }
    },
    "STYLESHEETS": {
        "css_test": {
            "source_filenames": (
                "css/misc.css",
            ),
            "output_filename": "compiled/css.css"
        }
    }
}

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "STATIC"),
]

STATIC_URL = '/url_static/'

if enable_pipeline:
    STATICFILES_STORAGE = "pipeline_s3_test.storages.S3PipelineCachedStorage"
    AWS_QUERYSTRING_AUTH = False
    AWS_ACCESS_KEY_ID = _AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY = _AWS_SECRET_ACCESS_KEY
    AWS_STORAGE_BUCKET_NAME = FRANKFURT_BUCKET
    os.environ['S3_USE_SIGV4'] = 'True'
    AWS_S3_HOST = 's3.eu-central-1.amazonaws.com'
    STATICFILES_FINDERS = (
        'django.contrib.staticfiles.finders.FileSystemFinder',
        'django.contrib.staticfiles.finders.AppDirectoriesFinder',
        # 'pipeline.finders.FileSystemFinder',
        # 'pipeline.finders.AppDirectoriesFinder',
        # 'pipeline.finders.CachedFileFinder',
        'pipeline.finders.PipelineFinder',
    )
else:
    STATIC_ROOT = os.path.join(BASE_DIR, 'STATIC_ROOT').replace('\\', '/')
    STATICFILES_STORAGE = 'pipeline.storage.PipelineStorage'

    STATICFILES_FINDERS = (
        # 'django.contrib.staticfiles.finders.FileSystemFinder',
        # 'django.contrib.staticfiles.finders.AppDirectoriesFinder',
        'pipeline.finders.FileSystemFinder',
        'pipeline.finders.AppDirectoriesFinder',
        'pipeline.finders.PipelineFinder',
    )
